import{_ as n,C as u,o as a,c,a as i,F as d,y as p,b as g,w as h,d as m,t as _,D as P}from"./OsvMvjb0.js";const f={"aria-label":"Breadcrumbs"},y={__name:"breadcrumb",props:{breadcrumbs:{type:Array,required:!0}},setup(t){return(o,e)=>{const s=u("router-link");return a(),c("nav",f,[i("ul",null,[(a(!0),c(d,null,p(t.breadcrumbs,(r,l)=>(a(),c("li",{key:l},[g(s,{to:r.to},{default:h(()=>[m(_(r.name),1)]),_:2},1032,["to"])]))),128))])])}}},b=n(y,[["__scopeId","data-v-db3fbb3d"]]),w=P("product",{state:()=>({products:[],allProducts:[],totalProducts:0,pageSize:8,currentPage:1,allCategories:[]}),actions:{async fetchAllProducts(){try{const o=await(await fetch("https://dummyjson.com/products?limit=0")).json();this.allProducts=o.products.map(e=>({...e,slug:this.generateSlug(e.title)})),this.updateCategories(this.allProducts),console.log("Fetched All Products:",this.allProducts.length),console.log("Categories:",this.allCategories)}catch(t){console.error("Error fetching all products:",t)}},async fetchProducts(t=1,o=this.pageSize){try{const s=await(await fetch(`https://dummyjson.com/products?skip=${(t-1)*o}&limit=${o}`)).json();this.products=s.products.map(r=>({...r,slug:this.generateSlug(r.title)})),this.totalProducts=s.total,this.currentPage=t,console.log("Fetched Products for Page:",this.products)}catch(e){console.error("Error fetching products for page:",e)}},getProductById(t){console.log("Looking for product with ID:",t),console.log("All Products:",this.allProducts);const o=this.allProducts.find(e=>e.id===parseInt(t));return console.log("Matched Product:",o),o},updateCategories(t){const o=t.map(e=>e.category).filter((e,s,r)=>r.indexOf(e)===s);this.allCategories=o},generateSlug(t){return t.toLowerCase().replace(/[^a-z0-9]+/g,"-").replace(/^-+|-+$/g,"")}},getters:{totalPages(){return Math.ceil(this.totalProducts/this.pageSize)}}});export{b as _,w as u};
