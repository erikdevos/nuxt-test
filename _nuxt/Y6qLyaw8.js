import{_ as u,B as d,o as a,c,a as i,F as l,z as p,b as _,w as h,d as g,t as m,C as P}from"./B2Z5o7Fn.js";const f={"aria-label":"Breadcrumbs"},S={__name:"breadcrumb",props:{breadcrumbs:{type:Array,required:!0}},setup(t){return(e,o)=>{const s=d("router-link");return a(),c("nav",f,[i("ul",null,[(a(!0),c(l,null,p(t.breadcrumbs,(r,n)=>(a(),c("li",{key:n},[_(s,{to:r.to},{default:h(()=>[g(m(r.name),1)]),_:2},1032,["to"])]))),128))])])}}},b=u(S,[["__scopeId","data-v-0176434e"]]),k=P("product",{state:()=>({products:[],totalProducts:0,pageSize:8,currentPage:1}),actions:{async fetchProducts(t=1,e=this.pageSize){try{const s=await(await fetch(`https://dummyjson.com/products?skip=${(t-1)*e}&limit=${e}`)).json();this.products=s.products.map(r=>({...r,slug:this.generateSlug(r.title)})),this.totalProducts=s.total,this.currentPage=t,console.log("Fetched Products:",this.products)}catch(o){console.error("Error fetching products:",o)}console.log("Fetched Products:",JSON.parse(JSON.stringify(this.products)))},getProductById(t){return this.products.find(e=>e.id===t)},generateSlug(t){return t.toLowerCase().replace(/[^a-z0-9]+/g,"-").replace(/^-+|-+$/g,"")}},getters:{totalPages(){return Math.ceil(this.totalProducts/this.pageSize)}}});export{b as _,k as u};
